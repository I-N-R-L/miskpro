inrl~2282ee503ee8d35ef2040220b69b3de2297d

mongodb://mongo:IjPzlZbCLzjT65YBz3tD@containers-us-west-173.railway.app:6971


const jsonString = '{"name": "John", "age": 30, "city": "New York"}';
const jsonArray = jsonString.match(/({.*?})/g);

console.log(jsonArray);

const lowercaseKeysArray = (jsonArray) => {
    let msg;
    jsonArray.map((jsonString) => {
        const jsonObject = JSON.parse(jsonString);
        const lowercaseKeysObject = Object.fromEntries(
          Object.entries(jsonObject).map(([key, value]) => [key.toLowerCase(), value])
        );
        msg = JSON.stringify(lowercaseKeysObject);
      });
      return msg;
}

function MediaUrls(text) {
    let array = [];
    const regexp = /https?:\/\/(www\.)?[-a-zA-Z0-9@:%._\+~#=]{1,256}\.[a-zA-Z0-9()]{1,6}\b([-a-zA-Z0-9()'@:%_\+.~#?!&//=]*)/gi;
    let urls = text.match(regexp);
    if (urls) {
            urls.map(url => {
                    if (['jpg', 'jpeg', 'png', 'gif', 'mp4', 'webp'].includes(url.split('.').pop().toLowerCase())) {
                            array.push(url);
                    }
            });
            return array;
    } else {
            return false;
    }
}

async function mention(m,text) {
    const types = ['type\image','type\video','type\audio','type\sticker','type\gif']
    const jsonArray = text.match(/({.*?})/g);
    const msg = text.replace(jsonArray,'');
    let type = 'text',message = {contextInfo:[]},commen;
    for(const i in types){
        if(a.match(types[i])) {
            type = msg.match(types[i])[0].replace('type','')
            break;
        }
    }
if(jsonArray) {
    message = lowercaseKeysArray(jsonArray[0])
    message.replace('filelength','fileLength').replace('contextinfo','contextInfo').replace('isforwarded','isForwarded').replace('forwardingscore','forwardingScore').replace('externaladreply','externalAdReply').replace('mediatype','mediaType').replace('mediaurl','mediaUrl').replace('sourceurl','sourceUrl')
    if(message.includes('externalAdReply')) commen = true;
    if(!message.includes('contextInfo')) message.contextInfo = {};
    message = JSON.parse(message);
    if(commen) {
        message.contextInfo.externalAdReply.containsAutoReply = true;
        message.contextInfo.externalAdReply.previewType = "PHOTO";
        message.contextInfo.externalAdReply.mediaType = 1;
    }
}
let URL = MediaUrls(msg)[0];
if(msg.match('&sender')) msg.replace('&sender',m.number); message.contextInfo.mentionedJid = [m.sender];
if(type == 'text') {
    return await m.conn.sendMessage(m.jid,{text:})
}
}
